@import 'tailwindcss';
@import '@nuxt/ui';
@source '../js/**/*.{ts,vue}';
@source '../../vite.config.ts';
/* @import 'baks-components-vue/themes/default.css'; */
/* @source '../../node_modules/baks-components-vue/dist/index.css'; */
:root {
  --ui-radius: 0rem;
  --ui-text: black;
}

@theme static {
  --color-primary-50: #faf5f0;
  --color-primary-100: #f4ebe1;
  --color-primary-200: #e9d7c3;
  --color-primary-300: #dfc3a5;
  --color-primary-400: #d4af87;
  --color-primary-500: #b47c41;
  --color-primary-600: #9d6a38;
  --color-primary-700: #875d31;
  --color-primary-800: #5a3e20;
  --color-primary-900: #2d1f10;
  --color-primary-950: #171008;

  --primary-color: var(--color-primary-500);

  --color-secondary-50: var(--color-cyan-50);
  --color-secondary-100: var(--color-cyan-100);
  --color-secondary-200: var(--color-cyan-200);
  --color-secondary-300: var(--color-cyan-300);
  --color-secondary-400: var(--color-cyan-400);
  --color-secondary-500: var(--color-cyan-700);
  --color-secondary-600: var(--color-cyan-700);
  --color-secondary-700: var(--color-cyan-700);
  --color-secondary-800: var(--color-cyan-800);
  --color-secondary-900: var(--color-cyan-900);
  --color-secondary-950: var(--color-cyan-950);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@utility bk-primary {
  font-family: serif;
}

@utility bk-secondary {
  font-family: serif;
}

@utility bk-dark {
  font-family: serif;

  & .bk-card {
    border-color: rgb(135, 93, 49);
  }
}

@utility bk-light {
  font-family: serif;

  & .bk-card {
    @apply border-yellow-700;
  }
}

/* .bk-card {
    @apply pixelated-corners;
    @apply relative border-8 p-2 shadow-lg after:pointer-events-none after:absolute after:top-0 after:left-0 after:h-full after:w-full after:border-4 after:border-solid after:border-neutral-900/90 after:content-[''];
    border-style: ridge;
    border-color: rgb(135, 93, 49);
} */
@utility tab-4 {
  tab-size: 4;
}

@utility border-outset {
  border-outset: outset;
}

@utility border-inset {
  border-style: inset;
}

@utility border-ridge {
  border-style: ridge;
}

@utility image-crisp {
  image-rendering: crisp-edges;
}

@utility image-auto-render {
  image-rendering: auto;
}

#log-modal {
  transition:
    opacity 0.5s ease-out,
    height 0.2s ease-out;
}

@utility pixelated-corners {
  clip-path: polygon(
    0px 12px,
    6px 12px,
    6px 6px,
    12px 6px,
    12px 0px,
    calc(100% - 12px) 0px,
    calc(100% - 12px) 6px,
    calc(100% - 6px) 6px,
    calc(100% - 6px) 12px,
    100% 12px,
    100% calc(100% - 12px),
    calc(100% - 6px) calc(100% - 12px),
    calc(100% - 6px) calc(100% - 6px),
    calc(100% - 12px) calc(100% - 6px),
    calc(100% - 12px) 100%,
    12px 100%,
    12px calc(100% - 6px),
    6px calc(100% - 6px),
    6px calc(100% - 12px),
    0px calc(100% - 12px)
  );
}

@utility pixelated-corners-sm {
  clip-path: polygon(
    0px 8px,
    4px 8px,
    4px 4px,
    8px 4px,
    8px 0px,
    calc(100% - 8px) 0px,
    calc(100% - 8px) 4px,
    calc(100% - 4px) 4px,
    calc(100% - 4px) 8px,
    100% 8px,
    100% calc(100% - 8px),
    calc(100% - 4px) calc(100% - 8px),
    calc(100% - 4px) calc(100% - 4px),
    calc(100% - 8px) calc(100% - 4px),
    calc(100% - 8px) 100%,
    8px 100%,
    8px calc(100% - 4px),
    4px calc(100% - 4px),
    4px calc(100% - 8px),
    0px calc(100% - 8px)
  );
}

.card::before {
  border-style: ridge;
}
